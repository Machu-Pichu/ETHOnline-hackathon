{
  "contractName": "RUP",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rounding",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rounding\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_burn(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens.\"},\"_mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements - `to` cannot be the zero address.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/RUP.sol\":\"RUP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/ERC20.sol\":{\"keccak256\":\"0xbec7b335fbb4e55585ee1cf2739d9be1496e2f158182a95a0e821ffc72697292\",\"urls\":[\"bzz-raw://cd6e344be10400496081175eded82a4e8309a66d24e7a2b098aa69e7400b2c35\",\"dweb:/ipfs/QmQhLfNme8PxTghnc3p95Jbr3VWKTHTf2DUbRpkkQUhavQ\"]},\"/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/RUP.sol\":{\"keccak256\":\"0xcbd912e7d1a81f92d35ee0ec1c37e24b610f01a671adf7376278b17c4d36084f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c18f724e716e54ec788dc711028f1551d914bc52e93182c997b3c512cbe9abcf\",\"dweb:/ipfs/QmdLaNp1G22CmeV5xwE9ef63sE4ACPVekRqLepKRwYrJNZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061152b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634e6ec2471161008c57806395d89b411161006657806395d89b4114610412578063a457c2d714610495578063a9059cbb146104f9578063dd62ed3e1461055d576100ea565b80634e6ec2471461031e5780636161eb181461036c57806370a08231146103ba576100ea565b806323b872dd116100c857806323b872dd146101f45780632e44040314610278578063313ce5671461029957806339509351146102ba576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d6575b600080fd5b6100f76105d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610612565b60405180821515815260200191505060405180910390f35b6101de610630565b6040518082815260200191505060405180910390f35b6102606004803603606081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063a565b60405180821515815260200191505060405180910390f35b610280610713565b604051808260ff16815260200191505060405180910390f35b6102a161071c565b604051808260ff16815260200191505060405180910390f35b610306600480360360408110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610725565b60405180821515815260200191505060405180910390f35b61036a6004803603604081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d8565b005b6103b86004803603604081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099f565b005b6103fc600480360360208110156103d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b63565b6040518082815260200191505060405180910390f35b61041a610bab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e1600480360360408110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be8565b60405180821515815260200191505060405180910390f35b6105456004803603604081101561050f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb5565b60405180821515815260200191505060405180910390f35b6105bf6004803603604081101561057357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cd3565b6040518082815260200191505060405180910390f35b60606040518060400160405280600b81526020017f527570656520546f6b656e000000000000000000000000000000000000000000815250905090565b600061062661061f610d5a565b8484610d62565b6001905092915050565b6000600254905090565b6000610647848484610f59565b61070884610653610d5a565b6107038560405180606001604052806028815260200161143f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106b9610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b610d62565b600190509392505050565b60006002905090565b60006012905090565b60006107ce610732610d5a565b846107c98560016000610743610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b610d62565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61088760008383611362565b61089c816002546112da90919063ffffffff16565b6002819055506108f3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806114676021913960400191505060405180910390fd5b610a3182600083611362565b610a9c816040518060600160405280602281526020016113d5602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af38160025461136790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606040518060400160405280600381526020017f5255500000000000000000000000000000000000000000000000000000000000815250905090565b6000610cab610bf5610d5a565b84610ca6856040518060600160405280602581526020016114d16025913960016000610c1f610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b610d62565b6001905092915050565b6000610cc9610cc2610d5a565b8484610f59565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610de8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806114ad6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806113f76022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806114886025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611065576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806113b26023913960400191505060405180910390fd5b611070838383611362565b6110db81604051806060016040528060268152602001611419602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061116e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561128c578082015181840152602081019050611271565b50505050905090810190601f1680156112b95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b505050565b60006113a983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061121a565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205b6c6b6970a4e19ed73480530a9186fc7c19451f2de86457a8dd84a715d788d964736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634e6ec2471161008c57806395d89b411161006657806395d89b4114610412578063a457c2d714610495578063a9059cbb146104f9578063dd62ed3e1461055d576100ea565b80634e6ec2471461031e5780636161eb181461036c57806370a08231146103ba576100ea565b806323b872dd116100c857806323b872dd146101f45780632e44040314610278578063313ce5671461029957806339509351146102ba576100ea565b806306fdde03146100ef578063095ea7b31461017257806318160ddd146101d6575b600080fd5b6100f76105d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013757808201518184015260208101905061011c565b50505050905090810190601f1680156101645780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101be6004803603604081101561018857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610612565b60405180821515815260200191505060405180910390f35b6101de610630565b6040518082815260200191505060405180910390f35b6102606004803603606081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061063a565b60405180821515815260200191505060405180910390f35b610280610713565b604051808260ff16815260200191505060405180910390f35b6102a161071c565b604051808260ff16815260200191505060405180910390f35b610306600480360360408110156102d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610725565b60405180821515815260200191505060405180910390f35b61036a6004803603604081101561033457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107d8565b005b6103b86004803603604081101561038257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061099f565b005b6103fc600480360360208110156103d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b63565b6040518082815260200191505060405180910390f35b61041a610bab565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e1600480360360408110156104ab57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be8565b60405180821515815260200191505060405180910390f35b6105456004803603604081101561050f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cb5565b60405180821515815260200191505060405180910390f35b6105bf6004803603604081101561057357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cd3565b6040518082815260200191505060405180910390f35b60606040518060400160405280600b81526020017f527570656520546f6b656e000000000000000000000000000000000000000000815250905090565b600061062661061f610d5a565b8484610d62565b6001905092915050565b6000600254905090565b6000610647848484610f59565b61070884610653610d5a565b6107038560405180606001604052806028815260200161143f60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106b9610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b610d62565b600190509392505050565b60006002905090565b60006012905090565b60006107ce610732610d5a565b846107c98560016000610743610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b610d62565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61088760008383611362565b61089c816002546112da90919063ffffffff16565b6002819055506108f3816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a25576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806114676021913960400191505060405180910390fd5b610a3182600083611362565b610a9c816040518060600160405280602281526020016113d5602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af38160025461136790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606040518060400160405280600381526020017f5255500000000000000000000000000000000000000000000000000000000000815250905090565b6000610cab610bf5610d5a565b84610ca6856040518060600160405280602581526020016114d16025913960016000610c1f610d5a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b610d62565b6001905092915050565b6000610cc9610cc2610d5a565b8484610f59565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610de8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806114ad6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e6e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806113f76022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fdf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806114886025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611065576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806113b26023913960400191505060405180910390fd5b611070838383611362565b6110db81604051806060016040528060268152602001611419602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461121a9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061116e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112da90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008383111582906112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561128c578082015181840152602081019050611271565b50505050905090810190601f1680156112b95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015611358576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b505050565b60006113a983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061121a565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205b6c6b6970a4e19ed73480530a9186fc7c19451f2de86457a8dd84a715d788d964736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "104:367:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "104:367:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;291:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17323:166:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16330:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17949:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;212:73:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;132:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18661:215:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;20903:368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;21590:408;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16486:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;386:83:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19363:266:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16806:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;17036:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;291:89:8;328:13;353:20;;;;;;;;;;;;;;;;;;;291:89;:::o;17323:166:7:-;17406:4;17422:39;17431:12;:10;:12::i;:::-;17445:7;17454:6;17422:8;:39::i;:::-;17478:4;17471:11;;17323:166;;;;:::o;16330:98::-;16383:7;16409:12;;16402:19;;16330:98;:::o;17949:317::-;18055:4;18071:36;18081:6;18089:9;18100:6;18071:9;:36::i;:::-;18117:121;18126:6;18134:12;:10;:12::i;:::-;18148:89;18186:6;18148:89;;;;;;;;;;;;;;;;;:11;:19;18160:6;18148:19;;;;;;;;;;;;;;;:33;18168:12;:10;:12::i;:::-;18148:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;18117:8;:121::i;:::-;18255:4;18248:11;;17949:317;;;;;:::o;212:73:8:-;253:5;277:1;270:8;;212:73;:::o;132:74::-;173:5;197:2;190:9;;132:74;:::o;18661:215:7:-;18749:4;18765:83;18774:12;:10;:12::i;:::-;18788:7;18797:50;18836:10;18797:11;:25;18809:12;:10;:12::i;:::-;18797:25;;;;;;;;;;;;;;;:34;18823:7;18797:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;18765:8;:83::i;:::-;18865:4;18858:11;;18661:215;;;;:::o;20903:368::-;21003:1;20984:21;;:7;:21;;;;20976:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21052:49;21081:1;21085:7;21094:6;21052:20;:49::i;:::-;21127:24;21144:6;21127:12;;:16;;:24;;;;:::i;:::-;21112:12;:39;;;;21182:30;21205:6;21182:9;:18;21192:7;21182:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;21161:9;:18;21171:7;21161:18;;;;;;;;;;;;;;;:51;;;;21248:7;21227:37;;21244:1;21227:37;;;21257:6;21227:37;;;;;;;;;;;;;;;;;;20903:368;;:::o;21590:408::-;21690:1;21671:21;;:7;:21;;;;21663:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21741:49;21762:7;21779:1;21783:6;21741:20;:49::i;:::-;21822:68;21845:6;21822:68;;;;;;;;;;;;;;;;;:9;:18;21832:7;21822:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;21801:9;:18;21811:7;21801:18;;;;;;;;;;;;;;;:89;;;;21915:24;21932:6;21915:12;;:16;;:24;;;;:::i;:::-;21900:12;:39;;;;21980:1;21954:37;;21963:7;21954:37;;;21984:6;21954:37;;;;;;;;;;;;;;;;;;21590:408;;:::o;16486:117::-;16552:7;16578:9;:18;16588:7;16578:18;;;;;;;;;;;;;;;;16571:25;;16486:117;;;:::o;386:83:8:-;425:13;450:12;;;;;;;;;;;;;;;;;;;386:83;:::o;19363:266:7:-;19456:4;19472:129;19481:12;:10;:12::i;:::-;19495:7;19504:96;19543:15;19504:96;;;;;;;;;;;;;;;;;:11;:25;19516:12;:10;:12::i;:::-;19504:25;;;;;;;;;;;;;;;:34;19530:7;19504:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;19472:8;:129::i;:::-;19618:4;19611:11;;19363:266;;;;:::o;16806:172::-;16892:4;16908:42;16918:12;:10;:12::i;:::-;16932:9;16943:6;16908:9;:42::i;:::-;16967:4;16960:11;;16806:172;;;;:::o;17036:149::-;17125:7;17151:11;:18;17163:5;17151:18;;;;;;;;;;;;;;;:27;17170:7;17151:27;;;;;;;;;;;;;;;;17144:34;;17036:149;;;;:::o;565:104::-;618:15;652:10;645:17;;565:104;:::o;22423:340::-;22541:1;22524:19;;:5;:19;;;;22516:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22621:1;22602:21;;:7;:21;;;;22594:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22703:6;22673:11;:18;22685:5;22673:18;;;;;;;;;;;;;;;:27;22692:7;22673:27;;;;;;;;;;;;;;;:36;;;;22740:7;22724:32;;22733:5;22724:32;;;22749:6;22724:32;;;;;;;;;;;;;;;;;;22423:340;;;:::o;20103:530::-;20226:1;20208:20;;:6;:20;;;;20200:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20309:1;20288:23;;:9;:23;;;;20280:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20362:47;20383:6;20391:9;20402:6;20362:20;:47::i;:::-;20440:71;20462:6;20440:71;;;;;;;;;;;;;;;;;:9;:17;20450:6;20440:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;20420:9;:17;20430:6;20420:17;;;;;;;;;;;;;;;:91;;;;20544:32;20569:6;20544:9;:20;20554:9;20544:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;20521:9;:20;20531:9;20521:20;;;;;;;;;;;;;;;:55;;;;20608:9;20591:35;;20600:6;20591:35;;;20619:6;20591:35;;;;;;;;;;;;;;;;;;20103:530;;;:::o;5302:187::-;5388:7;5420:1;5415;:6;;5423:12;5407:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5446:9;5462:1;5458;:5;5446:17;;5481:1;5474:8;;;5302:187;;;;;:::o;4430:176::-;4488:7;4507:9;4523:1;4519;:5;4507:17;;4547:1;4542;:6;;4534:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:1;4591:8;;;4430:176;;;;:::o;23350:92::-;;;;:::o;4877:134::-;4935:7;4961:43;4965:1;4968;4961:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;4954:50;;4877:134;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >0.6.0 <=0.7.1;\n\nimport { ERC20 } from \"./ERC20.sol\";\n\ncontract RUP is ERC20 {\n    function decimals() public pure returns (uint8) {\n        return 18;\n    }\n\n    function rounding() public pure returns (uint8) {\n        return 2;\n    }\n\n    function name() public pure returns (string memory) {\n        return \"Rupee Token\";\n    }\n\n    function symbol() public pure returns (string memory) {\n        return \"RUP\";\n    }\n}\n\n",
  "sourcePath": "/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/RUP.sol",
  "ast": {
    "absolutePath": "/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/RUP.sol",
    "exportedSymbols": {
      "RUP": [
        3181
      ]
    },
    "id": 3182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3144,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0",
          "<=",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:8"
      },
      {
        "absolutePath": "/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3146,
        "nodeType": "ImportDirective",
        "scope": 3182,
        "sourceUnit": 3143,
        "src": "66:36:8",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3145,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "75:5:8",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3147,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3142,
              "src": "120:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3142",
                "typeString": "contract ERC20"
              }
            },
            "id": 3148,
            "nodeType": "InheritanceSpecifier",
            "src": "120:5:8"
          }
        ],
        "contractDependencies": [
          2230,
          2307,
          3142
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3181,
        "linearizedBaseContracts": [
          3181,
          3142,
          2307,
          2230
        ],
        "name": "RUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "180:26:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "197:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 3152,
                  "id": 3154,
                  "nodeType": "Return",
                  "src": "190:9:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 3156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:8"
            },
            "returnParameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3151,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3156,
                  "src": "173:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3150,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "172:7:8"
            },
            "scope": 3181,
            "src": "132:74:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "260:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "277:1:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 3160,
                  "id": 3162,
                  "nodeType": "Return",
                  "src": "270:8:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e440403",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rounding",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:8"
            },
            "returnParameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "253:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:7:8"
            },
            "scope": 3181,
            "src": "212:73:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3171,
              "nodeType": "Block",
              "src": "343:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "527570656520546f6b656e",
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "360:13:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5a1dcaac607be10ac605ee64e77674c5d9ed9279c12f059da7d2b9da194788b2",
                      "typeString": "literal_string \"Rupee Token\""
                    },
                    "value": "Rupee Token"
                  },
                  "functionReturnParameters": 3168,
                  "id": 3170,
                  "nodeType": "Return",
                  "src": "353:20:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06fdde03",
            "id": 3172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:8"
            },
            "returnParameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3172,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:15:8"
            },
            "scope": 3181,
            "src": "291:89:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3179,
              "nodeType": "Block",
              "src": "440:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "525550",
                    "id": 3177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "457:5:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b4717da4af44b13ac9fda1e0a3f43e943ae14f7fe0d3158d6cee11bf7946af",
                      "typeString": "literal_string \"RUP\""
                    },
                    "value": "RUP"
                  },
                  "functionReturnParameters": 3176,
                  "id": 3178,
                  "nodeType": "Return",
                  "src": "450:12:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95d89b41",
            "id": 3180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:8"
            },
            "returnParameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3180,
                  "src": "425:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "424:15:8"
            },
            "scope": 3181,
            "src": "386:83:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3182,
        "src": "104:367:8"
      }
    ],
    "src": "33:440:8"
  },
  "legacyAST": {
    "absolutePath": "/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/RUP.sol",
    "exportedSymbols": {
      "RUP": [
        3181
      ]
    },
    "id": 3182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3144,
        "literals": [
          "solidity",
          ">",
          "0.6",
          ".0",
          "<=",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:8"
      },
      {
        "absolutePath": "/home/kuldeep/ETHEREUM/MachuPichu/hackathon/contracts/token/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3146,
        "nodeType": "ImportDirective",
        "scope": 3182,
        "sourceUnit": 3143,
        "src": "66:36:8",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 3145,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "75:5:8",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3147,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3142,
              "src": "120:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3142",
                "typeString": "contract ERC20"
              }
            },
            "id": 3148,
            "nodeType": "InheritanceSpecifier",
            "src": "120:5:8"
          }
        ],
        "contractDependencies": [
          2230,
          2307,
          3142
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3181,
        "linearizedBaseContracts": [
          3181,
          3142,
          2307,
          2230
        ],
        "name": "RUP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3155,
              "nodeType": "Block",
              "src": "180:26:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "197:2:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 3152,
                  "id": 3154,
                  "nodeType": "Return",
                  "src": "190:9:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 3156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "149:2:8"
            },
            "returnParameters": {
              "id": 3152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3151,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3156,
                  "src": "173:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3150,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "172:7:8"
            },
            "scope": 3181,
            "src": "132:74:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3163,
              "nodeType": "Block",
              "src": "260:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 3161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "277:1:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 3160,
                  "id": 3162,
                  "nodeType": "Return",
                  "src": "270:8:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2e440403",
            "id": 3164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rounding",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:8"
            },
            "returnParameters": {
              "id": 3160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3164,
                  "src": "253:5:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "252:7:8"
            },
            "scope": 3181,
            "src": "212:73:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3171,
              "nodeType": "Block",
              "src": "343:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "527570656520546f6b656e",
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "360:13:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5a1dcaac607be10ac605ee64e77674c5d9ed9279c12f059da7d2b9da194788b2",
                      "typeString": "literal_string \"Rupee Token\""
                    },
                    "value": "Rupee Token"
                  },
                  "functionReturnParameters": 3168,
                  "id": 3170,
                  "nodeType": "Return",
                  "src": "353:20:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06fdde03",
            "id": 3172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:2:8"
            },
            "returnParameters": {
              "id": 3168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3172,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:15:8"
            },
            "scope": 3181,
            "src": "291:89:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3179,
              "nodeType": "Block",
              "src": "440:29:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "525550",
                    "id": 3177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "457:5:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c6b4717da4af44b13ac9fda1e0a3f43e943ae14f7fe0d3158d6cee11bf7946af",
                      "typeString": "literal_string \"RUP\""
                    },
                    "value": "RUP"
                  },
                  "functionReturnParameters": 3176,
                  "id": 3178,
                  "nodeType": "Return",
                  "src": "450:12:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95d89b41",
            "id": 3180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:2:8"
            },
            "returnParameters": {
              "id": 3176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3175,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3180,
                  "src": "425:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "425:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "424:15:8"
            },
            "scope": 3181,
            "src": "386:83:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3182,
        "src": "104:367:8"
      }
    ],
    "src": "33:440:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xbDe489c2f047391e915acA46e964257d2Be81EA5",
      "transactionHash": "0x12fa8c8148ef8c471a08c18fdc5a8dfe2be9226a5b45ffbecd6d66b043351a0d"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9d2cD719460A3b09f5549576bEED15C3b57a9928",
      "transactionHash": "0x81ac50d9d6798db99cbaa4120f8c270a2f0862fef323dd547181d0eddbe4129e"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-18T07:21:12.941Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_burn(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, reducing the total supply. Emits a {Transfer} event with `to` set to the zero address. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens."
      },
      "_mint(address,uint256)": {
        "details": "Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements - `to` cannot be the zero address."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}